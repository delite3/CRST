from typing import overload
import numpy
import numpy.typing

class BoschRadar:
    def __init__(self, snr50db: float, rcs50: float, r50: float, pf: float, scale: float, rcs_min: float) -> None: ...
    @overload
    def compute_pd(self, snr: float) -> float: ...
    @overload
    def compute_pd(self, snr: numpy.typing.NDArray[numpy.float64]) -> numpy.typing.NDArray[numpy.float64]: ...
    @overload
    def compute_snr(self, range: float, phi: float, rcs: float) -> float: ...
    @overload
    def compute_snr(self, range: numpy.typing.NDArray[numpy.float64], phi: numpy.typing.NDArray[numpy.float64], rcs: float) -> numpy.typing.NDArray[numpy.float64]: ...
    @classmethod
    def db_to_linear(cls, db: float) -> float: ...
    @overload
    def gaussian_gain(self, phi: float) -> float: ...
    @overload
    def gaussian_gain(self, phi: numpy.typing.NDArray[numpy.float64]) -> numpy.typing.NDArray[numpy.float64]: ...
    @overload
    def sim_rcs(self, r: float, rcs: float, add_noise: bool) -> float: ...
    @overload
    def sim_rcs(self, r: numpy.typing.NDArray[numpy.float64], rcs: float, add_noise: bool) -> numpy.typing.NDArray[numpy.float64]: ...
